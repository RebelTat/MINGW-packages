From fa1c1e94b55b3cf5d5175e9f6bfdb2f12b83ab15 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A0=D1=83=D1=81=D0=BB=D0=B0=D0=BD=20=D0=98=D0=B6=D0=B1?=
 =?UTF-8?q?=D1=83=D0=BB=D0=B0=D1=82=D0=BE=D0=B2?= <lrn1986@gmail.com>
Date: Sat, 31 Jul 2021 10:50:12 +0000
Subject: [PATCH] Backport GWin32AppInfo fixes

See https://gitlab.gnome.org/GNOME/glib/-/merge_requests/2220
---
 gio/gwin32appinfo.c       |  7 ++++++-
 gio/gwin32packageparser.c |  2 +-
 gio/gwin32registrykey.c   | 15 ++++++++-------
 3 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/gio/gwin32appinfo.c b/gio/gwin32appinfo.c
index 5403225e2..3468dfee0 100644
--- a/gio/gwin32appinfo.c
+++ b/gio/gwin32appinfo.c
@@ -1629,6 +1629,7 @@ process_uwp_verbs (GList                    *verbs,
           continue;
         }
 
+      acid = NULL;
       got_value = g_win32_registry_key_get_value_w (key,
                                                     g_win32_registry_get_os_dirs_w (),
                                                     TRUE,
@@ -3634,6 +3635,7 @@ grab_registry_string (GWin32RegistryKey  *handler_appkey,
   if (*destination != NULL)
     return;
 
+  value = NULL;
   if (g_win32_registry_key_get_value_w (handler_appkey,
                                         NULL,
                                         TRUE,
@@ -3828,6 +3830,9 @@ update_registry_data (void)
   return;
 }
 
+static void
+watch_keys (void);
+
 /* This function is called when any of our registry watchers detect
  * changes in the registry.
  */
@@ -3835,6 +3840,7 @@ static void
 keys_updated (GWin32RegistryKey  *key,
               gpointer            user_data)
 {
+  watch_keys ();
   /* Indicate the tree as not up-to-date, push a new job for the AppInfo thread */
   g_atomic_int_inc (&gio_win32_appinfo_update_counter);
   /* We don't use the data pointer, but it must be non-NULL */
@@ -4029,7 +4035,6 @@ gio_win32_appinfo_init (gboolean do_wait)
       g_mutex_lock (&gio_win32_appinfo_mutex);
       while (g_atomic_int_get (&gio_win32_appinfo_update_counter) > 0)
         g_cond_wait (&gio_win32_appinfo_cond, &gio_win32_appinfo_mutex);
-      watch_keys ();
       g_mutex_unlock (&gio_win32_appinfo_mutex);
     }
 }
diff --git a/gio/gwin32packageparser.c b/gio/gwin32packageparser.c
index ad5302270..ee05bb1dd 100755
--- a/gio/gwin32packageparser.c
+++ b/gio/gwin32packageparser.c
@@ -390,7 +390,7 @@ g_win32_package_parser_enum_packages (GWin32PackageParserCallback   callback,
       wcs_path = LoadedWindowsGetStringRawBuffer (path, NULL);
       manifest_filename_size = wcslen (wcs_path) + wcslen (bslash_appmanifest);
       manifest_filename = g_new (wchar_t, manifest_filename_size + 1);
-      memcpy (manifest_filename, wcs_path, manifest_filename_size * sizeof (wchar_t));
+      memcpy (manifest_filename, wcs_path, wcslen (wcs_path) * sizeof (wchar_t));
       memcpy (&manifest_filename[wcslen (wcs_path)], bslash_appmanifest, (wcslen (bslash_appmanifest) + 1) * sizeof (wchar_t));
 
       memset (sax, 0, sizeof (*sax));
diff --git a/gio/gwin32registrykey.c b/gio/gwin32registrykey.c
index 398d8f45b..5e2b006dd 100644
--- a/gio/gwin32registrykey.c
+++ b/gio/gwin32registrykey.c
@@ -2425,17 +2425,20 @@ key_changed (PVOID            closure,
              ULONG            reserved)
 {
   GWin32RegistryKey *key = G_WIN32_REGISTRY_KEY (closure);
+  gpointer user_data;
+  GWin32RegistryKeyWatchCallbackFunc callback;
+
+  callback = g_steal_pointer (&key->priv->callback);
+  user_data = g_steal_pointer (&key->priv->user_data);
 
   g_free (status_block);
   g_atomic_int_set (&key->priv->change_indicator, G_WIN32_KEY_CHANGED);
   g_atomic_int_set (&key->priv->watch_indicator, G_WIN32_KEY_UNWATCHED);
   key->priv->update_flags = G_WIN32_REGISTRY_UPDATED_NOTHING;
 
-  if (key->priv->callback)
-    key->priv->callback (key, key->priv->user_data);
+  if (callback)
+    callback (key, user_data);
 
-  key->priv->callback = NULL;
-  key->priv->user_data = NULL;
   g_object_unref (key);
 }
 
@@ -2550,9 +2553,7 @@ g_win32_registry_key_watch (GWin32RegistryKey                   *key,
                                            0,
                                            TRUE);
 
-  g_assert (status != STATUS_SUCCESS);
-
-  if (status == STATUS_PENDING)
+  if (status == STATUS_PENDING || status == STATUS_SUCCESS)
     return TRUE;
 
   g_atomic_int_set (&key->priv->change_indicator, G_WIN32_KEY_UNKNOWN);
-- 
2.29.2.windows.2

